
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven { url "https://mirrors.tencent.com/repository/maven/thirdparty/" }
        maven { url "https://mirrors.tencent.com/repository/maven/tencent_public_snapshots/" }
        maven { url "https://mirrors.tencent.com/repository/maven/thirdparty-snapshots/" }
        maven { url "https://mirrors.tencent.com/nexus/repository/maven-public/" }
        maven { url "https://mirrors.tencent.com/repository/maven/tencent_public/" }
    }
    dependencies {
        if (project.hasProperty('GRADLE_3') && GRADLE_3.equalsIgnoreCase('TRUE')) {
            classpath 'com.android.tools.build:gradle:3.5.3'
        } else {
            classpath 'com.android.tools.build:gradle:2.3.3'
        }
        classpath("com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}") {
            changing = TINKER_VERSION?.endsWith("-SNAPSHOT")
            exclude group: 'com.android.tools.build', module: 'gradle'
        }
        classpath 'com.didichuxing.tools:droidassist:1.1.1'
    }
    configurations.all {
        it.resolutionStrategy.cacheDynamicVersionsFor(5, 'minutes')
        it.resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven { url "https://mirrors.tencent.com/repository/maven/thirdparty/" }
        maven { url "https://mirrors.tencent.com/repository/maven/tencent_public_snapshots/" }
        maven { url "https://mirrors.tencent.com/repository/maven/thirdparty-snapshots/" }
        maven { url "https://mirrors.tencent.com/nexus/repository/maven-public/" }
        maven { url "https://mirrors.tencent.com/repository/maven/tencent_public/" }
    }
}

def is_gradle_3() {
    return hasProperty('GRADLE_3') && GRADLE_3.equalsIgnoreCase('TRUE')
}


